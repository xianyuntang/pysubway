[tool.poetry]
name = "pysubway"
version = "0.1.0"
description = ""
authors = ["tangxianyun <xianyun.tang@ailabs.tw>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12.4"
poethepoet = "^0.27.0"
pydantic = "^2.8.2"
aiohttp = "^3.10.2"
nanoid = "^2.0.0"
uvloop = "^0.19.0"
anyio = "^4.4.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.5"
mypy = "^1.11.0"
pre-commit = "^3.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D", "ANN101", "ANN102", "FIX002", "COM812", "ISC001", "S610"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
disable_error_code = ["import-untyped"]
strict = true
exclude = ['^tests/.+']


[tool.coverage.report]
omit = ["tests/*", "**/*/__init__.py"]

[tool.pytest.ini_options]
filterwarnings = [
    'ignore::DeprecationWarning',
]


[tool.poe.tasks.client]
cmd = "python -m src.main client --host=$host --port=$port $local_port"
args = [
    { name = "local_port", positional = true, required = true, help = "local port" },
    { name = "host", default = "pysubway.com", help = "control server host" },
    { name = "port", default = "5678", help = "control server port" },
]


[tool.poe.tasks.server]
cmd = "python -m src.main server --control_port=$control_port --domain=$domain --use_ssl=$use_ssl --behind_proxy=$behind_proxy "
args = [
    { name = "control_port", default = "5678" },
    { name = "domain", default = "pysubway.com" },
    { name = "use_ssl", default = "false" },
    { name = "behind_proxy", default = "false"}
]
